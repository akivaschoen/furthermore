;; Analyzed by ClojureScript 0.0-3119
{:use-macros nil, :excludes #{}, :name furthermore.utils, :imports nil, :requires {secretary secretary.core, secretary.core secretary.core, timef cljs-time.format, cljs-time.format cljs-time.format, clojure.string clojure.string, str clojure.string}, :uses nil, :defs {get-text-excerpt {:protocol-inline nil, :meta {:arglists (quote ([text ct])), :end-column 23, :end-line 12, :column 7, :line 12, :file "/Users/akiva/Code/projects/furthermore/src/cljs/furthermore/utils.cljs"}, :name furthermore.utils/get-text-excerpt, :variadic false, :file "src/cljs/furthermore/utils.cljs", :end-column 23, :method-params ([text ct]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text ct])), :test true}, format-timestamp {:protocol-inline nil, :meta {:arglists (quote ([timestamp])), :end-column 23, :end-line 6, :column 7, :line 6, :file "/Users/akiva/Code/projects/furthermore/src/cljs/furthermore/utils.cljs"}, :name furthermore.utils/format-timestamp, :variadic false, :file "src/cljs/furthermore/utils.cljs", :end-column 23, :method-params ([timestamp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 1}), :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([timestamp])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:date :time], :seen #{:date :time}}, :doc nil}