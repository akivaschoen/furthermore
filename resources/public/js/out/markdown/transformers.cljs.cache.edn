;; Analyzed by ClojureScript 0.0-3119
{:use-macros nil, :excludes #{}, :name markdown.transformers, :imports nil, :requires {clojure.string clojure.string, string clojure.string}, :uses nil, :defs {italics {:protocol-inline nil, :meta {:arglists (quote ([text state])), :end-column 14, :end-line 117, :column 7, :line 117, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/italics, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 14, :method-params ([text state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 117, :end-line 117, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text state])), :test true}, h2? {:protocol-inline nil, :meta {:arglists (quote ([text])), :end-column 10, :end-line 18, :column 7, :line 18, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/h2?, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 10, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil boolean clj-nil}, :variadic false, :max-fixed-arity 1}), :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text])), :test true}, separator {:protocol-inline nil, :meta {:arglists (quote ([escape? text open close separator state])), :end-column 16, :end-line 73, :column 7, :line 73, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/separator, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 16, :method-params ([escape? text open close separator state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 6}), :line 73, :end-line 73, :max-fixed-arity 6, :fn-var true, :arglists (quote ([escape? text open close separator state])), :test true}, make-heading {:protocol-inline nil, :meta {:arglists (quote ([text heading-anchors])), :end-column 19, :end-line 154, :column 7, :line 154, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/make-heading, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 19, :method-params ([text heading-anchors]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 154, :end-line 154, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text heading-anchors])), :test true}, *substring* {:meta {:declared true, :dynamic true, :end-column 38, :end-line 6, :column 27, :line 6, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/*substring*, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 38, :column 1, :dynamic true, :line 6, :declared true, :end-line 6, :test true}, paragraph {:protocol-inline nil, :meta {:arglists (quote ([text {:keys [eof heading hr code lists blockquote paragraph last-line-empty?], :as state}])), :end-column 16, :end-line 212, :column 7, :line 212, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/paragraph, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 16, :method-params ([text p__28882]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 212, :end-line 212, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text {:keys [eof heading hr code lists blockquote paragraph last-line-empty?], :as state}])), :test true}, href {:protocol-inline nil, :meta {:arglists (quote ([title link])), :end-column 11, :end-line 306, :column 7, :line 306, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/href, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 11, :method-params ([title link]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag seq, :variadic false, :max-fixed-arity 2}), :line 306, :end-line 306, :max-fixed-arity 2, :fn-var true, :arglists (quote ([title link])), :test true}, blockquote {:protocol-inline nil, :meta {:arglists (quote ([text {:keys [eof code codeblock lists], :as state}])), :end-column 17, :end-line 288, :column 7, :line 288, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/blockquote, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 17, :method-params ([text p__28890]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 288, :end-line 288, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text {:keys [eof code codeblock lists], :as state}])), :test true}, img {:protocol-inline nil, :meta {:arglists (quote ([alt url & [title]])), :end-column 10, :end-line 309, :column 7, :line 309, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/img, :variadic true, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 10, :method-params ([alt url p__28893]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag seq, :variadic true, :max-fixed-arity 2}), :line 309, :end-line 309, :max-fixed-arity 2, :fn-var true, :arglists (quote ([alt url & [title]])), :test true}, heading {:protocol-inline nil, :meta {:arglists (quote ([text state])), :end-column 14, :end-line 161, :column 7, :line 161, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/heading, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 14, :method-params ([text state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 161, :end-line 161, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text state])), :test true}, superscript {:protocol-inline nil, :meta {:arglists (quote ([text state])), :end-column 18, :end-line 126, :column 7, :line 126, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/superscript, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 18, :method-params ([text state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 126, :end-line 126, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text state])), :test true}, autourl-transformer {:protocol-inline nil, :meta {:arglists (quote ([text state])), :end-column 26, :end-line 184, :column 7, :line 184, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/autourl-transformer, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 26, :method-params ([text state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 184, :end-line 184, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text state])), :test true}, heading-text {:protocol-inline nil, :meta {:arglists (quote ([text])), :end-column 19, :end-line 143, :column 7, :line 143, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/heading-text, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 19, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text])), :test true}, h1? {:protocol-inline nil, :meta {:arglists (quote ([text])), :end-column 10, :end-line 15, :column 7, :line 15, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/h1?, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 10, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil boolean clj-nil}, :variadic false, :max-fixed-arity 1}), :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text])), :test true}, codeblock {:protocol-inline nil, :meta {:arglists (quote ([text state])), :end-column 16, :end-line 250, :column 7, :line 250, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/codeblock, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 16, :method-params ([text state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 250, :end-line 250, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text state])), :test true}, bold {:protocol-inline nil, :meta {:arglists (quote ([text state])), :end-column 11, :end-line 111, :column 7, :line 111, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/bold, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 11, :method-params ([text state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 111, :end-line 111, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text state])), :test true}, escape-link {:protocol-inline nil, :meta {:arglists (quote ([& xs])), :end-column 18, :end-line 43, :column 7, :line 43, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/escape-link, :variadic true, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 18, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag seq, :variadic true, :max-fixed-arity 0}), :line 43, :end-line 43, :max-fixed-arity 0, :fn-var true, :arglists (quote ([& xs])), :test true}, hr {:protocol-inline nil, :meta {:arglists (quote ([text state])), :end-column 9, :end-line 277, :column 7, :line 277, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/hr, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 9, :method-params ([text state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 277, :end-line 277, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text state])), :test true}, escape-code {:protocol-inline nil, :meta {:arglists (quote ([s])), :end-column 18, :end-line 27, :column 7, :line 27, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/escape-code, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, ul {:protocol-inline nil, :meta {:arglists (quote ([text state])), :end-column 9, :end-line 415, :column 7, :line 415, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/ul, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 9, :method-params ([text state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{cljs.core/IVector clj-nil}, :variadic false, :max-fixed-arity 2}), :line 415, :end-line 415, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text state])), :test true}, transformer-vector {:meta {:end-column 24, :end-line 467, :column 6, :line 467, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :file "resources/public/js/out/markdown/transformers.cljs", :line 467, :column 1, :end-line 467, :end-column 24, :test true, :name markdown.transformers/transformer-vector}, autoemail-transformer {:protocol-inline nil, :meta {:arglists (quote ([text state])), :end-column 28, :end-line 194, :column 7, :line 194, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/autoemail-transformer, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 28, :method-params ([text state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 194, :end-line 194, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text state])), :test true}, add-row {:protocol-inline nil, :meta {:arglists (quote ([row-type list-type num-indents indents content state])), :end-column 14, :end-line 393, :column 7, :line 393, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/add-row, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 14, :method-params ([row-type list-type num-indents indents content state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{cljs.core/IVector clj-nil}, :variadic false, :max-fixed-arity 6}), :line 393, :end-line 393, :max-fixed-arity 6, :fn-var true, :arglists (quote ([row-type list-type num-indents indents content state])), :test true}, strong {:protocol-inline nil, :meta {:arglists (quote ([text state])), :end-column 13, :end-line 108, :column 7, :line 108, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/strong, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 13, :method-params ([text state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 108, :end-line 108, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text state])), :test true}, li {:protocol-inline nil, :meta {:arglists (quote ([text {:keys [code codeblock last-line-empty? eof lists], :as state}])), :end-column 9, :end-line 427, :column 7, :line 427, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/li, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 9, :method-params ([text p__28950]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{cljs.core/IVector clj-nil}, :variadic false, :max-fixed-arity 2}), :line 427, :end-line 427, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text {:keys [code codeblock last-line-empty? eof lists], :as state}])), :test true}, formatter {:meta {:declared true, :dynamic true, :end-column 36, :end-line 4, :column 27, :line 4, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/formatter, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 36, :column 1, :dynamic true, :line 4, :declared true, :end-line 4, :test true}, reference-link {:protocol-inline nil, :meta {:arglists (quote ([text {:keys [code codeblock references], :as state}])), :end-column 21, :end-line 373, :column 7, :line 373, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/reference-link, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 21, :method-params ([text p__28925]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 373, :end-line 373, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text {:keys [code codeblock references], :as state}])), :test true}, *next-line* {:meta {:declared true, :dynamic true, :end-column 31, :end-line 8, :column 20, :line 8, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/*next-line*, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 31, :column 1, :dynamic true, :line 8, :declared true, :end-line 8, :test true}, em {:protocol-inline nil, :meta {:arglists (quote ([text state])), :end-column 9, :end-line 114, :column 7, :line 114, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/em, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 9, :method-params ([text state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 114, :end-line 114, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text state])), :test true}, replace-reference-link {:protocol-inline nil, :meta {:arglists (quote ([references reference])), :end-column 29, :end-line 368, :column 7, :line 368, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/replace-reference-link, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 29, :method-params ([references reference]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 368, :end-line 368, :max-fixed-arity 2, :fn-var true, :arglists (quote ([references reference])), :test true}, close-lists {:protocol-inline nil, :meta {:arglists (quote ([lists])), :end-column 18, :end-line 387, :column 7, :line 387, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/close-lists, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 18, :method-params ([lists]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 387, :end-line 387, :max-fixed-arity 1, :fn-var true, :arglists (quote ([lists])), :test true}, heading-level {:protocol-inline nil, :meta {:arglists (quote ([text])), :end-column 20, :end-line 150, :column 7, :line 150, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/heading-level, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 20, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{number clj-nil}, :variadic false, :max-fixed-arity 1}), :line 150, :end-line 150, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text])), :test true}, empty-line {:protocol-inline nil, :meta {:arglists (quote ([text state])), :end-column 17, :end-line 21, :column 7, :line 21, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/empty-line, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 17, :method-params ([text state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text state])), :test true}, handle-img-link {:protocol-inline nil, :meta {:arglists (quote ([xs])), :end-column 22, :end-line 316, :column 7, :line 316, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/handle-img-link, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 22, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil cljs.core/LazySeq}, :variadic false, :max-fixed-arity 1}), :line 316, :end-line 316, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xs])), :test true}, parse-reference {:protocol-inline nil, :meta {:arglists (quote ([reference start])), :end-column 22, :end-line 356, :column 7, :line 356, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/parse-reference, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 22, :method-params ([reference start]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 356, :end-line 356, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reference start])), :test true}, escaped-chars {:protocol-inline nil, :meta {:arglists (quote ([text state])), :end-column 20, :end-line 52, :column 7, :line 52, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/escaped-chars, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 20, :method-params ([text state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text state])), :test true}, parse-reference-link {:protocol-inline nil, :meta {:arglists (quote ([line references])), :end-column 27, :end-line 362, :column 7, :line 362, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/parse-reference-link, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 27, :method-params ([line references]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 362, :end-line 362, :max-fixed-arity 2, :fn-var true, :arglists (quote ([line references])), :test true}, reference {:protocol-inline nil, :meta {:arglists (quote ([text])), :end-column 16, :end-line 353, :column 7, :line 353, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/reference, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 16, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{clj any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 353, :end-line 353, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text])), :test true}, heading? {:protocol-inline nil, :meta {:arglists (quote ([text type])), :end-column 15, :end-line 10, :column 7, :line 10, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/heading?, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 15, :method-params ([text type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil boolean clj-nil}, :variadic false, :max-fixed-arity 2}), :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text type])), :test true}, inline-code {:protocol-inline nil, :meta {:arglists (quote ([text state])), :end-column 18, :end-line 120, :column 7, :line 120, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/inline-code, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 18, :method-params ([text state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 120, :end-line 120, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text state])), :test true}, ol {:protocol-inline nil, :meta {:arglists (quote ([text state])), :end-column 9, :end-line 421, :column 7, :line 421, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/ol, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 9, :method-params ([text state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{cljs.core/IVector clj-nil}, :variadic false, :max-fixed-arity 2}), :line 421, :end-line 421, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text state])), :test true}, strikethrough {:protocol-inline nil, :meta {:arglists (quote ([text state])), :end-column 20, :end-line 123, :column 7, :line 123, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/strikethrough, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 20, :method-params ([text state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 123, :end-line 123, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text state])), :test true}, link {:protocol-inline nil, :meta {:arglists (quote ([text {:keys [code codeblock], :as state}])), :end-column 11, :end-line 325, :column 7, :line 325, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/link, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 11, :method-params ([text p__28904]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 325, :end-line 325, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text {:keys [code codeblock], :as state}])), :test true}, code {:protocol-inline nil, :meta {:arglists (quote ([text {:keys [eof lists code codeblock], :as state}])), :end-column 11, :end-line 229, :column 7, :line 229, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/code, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 11, :method-params ([text p__28885]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 229, :end-line 229, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text {:keys [eof lists code codeblock], :as state}])), :test true}, br {:protocol-inline nil, :meta {:arglists (quote ([text {:keys [code lists], :as state}])), :end-column 9, :end-line 177, :column 7, :line 177, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/br, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 9, :method-params ([text p__28877]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 177, :end-line 177, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text {:keys [code lists], :as state}])), :test true}, paragraph-text {:protocol-inline nil, :meta {:arglists (quote ([last-line-empty? text])), :end-column 21, :end-line 208, :column 7, :line 208, :file "/Users/akiva/Code/projects/furthermore/resources/public/js/out/markdown/transformers.cljs"}, :name markdown.transformers/paragraph-text, :variadic false, :file "resources/public/js/out/markdown/transformers.cljs", :end-column 21, :method-params ([last-line-empty? text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 208, :end-line 208, :max-fixed-arity 2, :fn-var true, :arglists (quote ([last-line-empty? text])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:code :codeblock :hr :heading :found-token :default :else :heading-anchors :lists :clojurescript :last-line-empty? :paragraph :blockquote :eof :code-style :references :ul :ol :buf], :seen #{:codeblock :hr :lists :buf :ul :clojurescript :else :last-line-empty? :default :found-token :references :code-style :ol :code :heading-anchors :eof :paragraph :blockquote :heading}}, :doc nil}